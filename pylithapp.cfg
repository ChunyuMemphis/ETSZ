[pylithapp]

# This is not a self-contained simulation configuration file. This
# file only specifies the general parameters common to the simulations
# in this directory.

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
pylithapp = 1
timedependent = 1
greensfns = 1
implicit = 1
petsc = 1
solverlinear = 1
meshiocubit = 1
implicitelasticity = 1
faultcohesivekin = 1
fiatsimplex = 1
materials = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
#debug = 1   ; uncomment to get very verbose mesh information

# Change the default mesh reader to the CUBIT reader.
reader = pylith.meshio.MeshIOCubit

# Optimize ordering of mesh cells and vertices using reverse
# Cuthill-KcKee algorithm.
#reorder_mesh = True

[pylithapp.mesh_generator.reader]
# Set filename of mesh to import.
#filename = mesh/ETliuchunyu_buried_high9.exo
#filename = mesh/ETliuchunyu_buried_reference.exo
#filename = mesh/ETliuchunyu_buried_east.exo
#######################################################################
#filename = mesh/ETliuchunyu_buried_tilt.exo
### ETliuchunyu_buried_tilt is used for paper, normal 50-55km anomaly
########################################################################
filename = mesh/ETliuchunyu_buried_tilt_5080km.exo
#filename = mesh/ETliuchunyu_buried_tilt100km_strike100_dip80.exo
# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]

# Set materials to an array of 2 materials:
#   'basement' and 'mantle'
materials = [basement,mantle,low]

[pylithapp.problem.materials.basement]
label = basement material
id = 1
db_properties.label = Properties for basement
db_properties.iohandler.filename = spatialdb/basement/basementnotopo.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3

[pylithapp.problem.materials.mantle]
label = mantle material
id = 2
db_properties.label = Properties for mantle
#db_properties.iohandler.filename = spatialdb/mantle/mantle_50120.txt
db_properties.iohandler.filename = spatialdb/mantle/mantle60kmnoanomalyinterpolate.spatialdb
#db_properties.iohandler.filename = spatialdb/mantle/mantle60kmwithanomaly.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3
[pylithapp.problem.materials.low]
label = low density mantle
id = 3
db_properties.label = Properties for low_density
db_properties.iohandler.filename = spatialdb/mantle/low_5080.spatialdb
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 3

##### the low.spatialdb is for 50-55km anomaly
####  the low_5080.spatialdb is for 50-80km anomaly
# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
# Set the solver options.

[pylithapp.petsc]
malloc_dump =

# Preconditioner settings.
pc_type = asm
sub_pc_factor_shift_type = nonzero

# Convergence parameters.
ksp_rtol = 1.0e-12
ksp_atol = 1.0e-20
ksp_max_it = 5000
ksp_gmres_restart = 50

# Linear solver monitoring options.
ksp_monitor = true
ksp_view = true
ksp_converged_reason = true
ksp_error_if_not_converged = true

# nonlinear convergence parameter 
snes_rtol = 1.0e-12
snes_atol = 1.0e-9
snes_max_it = 5000

# Nonlinear solver monitoring options.
snes_monitor = true
snes_linesearch_monitor = true
#snes_view = true
snes_converged_reason = true
snes_error_if_not_converged = true

# This file provides an optimized solver, the analogue of LU factorization, for the
# saddle point system arising from problems with a fault. This should be used for
# large production runs.

[pylithapp.problem.formulation]
# The split_fields flag must be specified, so that the PCFIELDSPLIT preconditioner
# can be used. The matrix_type must be set to aij since we lose symmetry when
# splitting. We have turned on the custom preconditioner for the fault problem.
#
split_fields = True
matrix_type = aij
use_custom_constraint_pc = True

# The displacements are solved with algebraic multigrid (ML), and
# the fault tractions with a standard Krylov method since we do not
# explicitly form the Schur complement matrix.

[pylithapp.petsc]
fs_pc_type = fieldsplit
fs_pc_use_amat = true
fs_pc_fieldsplit_type = multiplicative
#fs_pc_fieldsplit_type = schur
fs_fieldsplit_displacement_pc_type = ml
fs_fieldsplit_lagrange_multiplier_pc_type = jacobi
fs_fieldsplit_displacement_ksp_type = preonly
fs_fieldsplit_lagrange_multiplier_ksp_type = preonly

#fs-pc_fieldsplit_detect_saddle_point = PETSC_NULL                                                                
#fs_pc_type = fieldsplit 
#fd_pc_use_amat = true 
#fs_pc_fieldsplit_type = schur 
#fs_pc_fieldsplit_schur_factorization_type = full
#fs_fieldsplit_0_ksp_type = preonly
fs_fieldsplit_0_pc_type = lu 
#fs_fieldsplit_1_ksp_type = gmres 
#fs_fieldsplit_1_ksp_rtol = 1.0e-11
#fs_fieldsplit_1_pc_type = jacobi
# PETSc summary -- useful for performance information.
log_summary = true

# Uncomment to launch gdb when starting PyLith.
# start_in_debugger = true
